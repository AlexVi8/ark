//
// mod.rs
//
// Copyright (C) 2023 Posit Software, PBC. All rights reserved.
//
//
// Auto-generated by 'positron/scripts/generate-events.ts'.
// Please do not modify this file directly.
//

use crate::positron;

pub trait PositronEventType {
    fn event_type(&self) -> String;
}

/// Represents a change in the runtime's busy state.
/// Note that this represents the busy state of the underlying computation engine, not the busy state of the kernel.
/// The kernel is busy when it is processing a request, but the runtime is busy only when a computation is running.
#[positron::event("busy")]
pub struct BusyEvent {

    /// Whether the runtime is busy.
    pub busy: bool,

}

/// Use this event to show a message to the user.
#[positron::event("show_message")]
pub struct ShowMessageEvent {

    /// The message to show to the user.
    pub message: String,

}

/// Show help content in the Help pane.
#[positron::event("show_help")]
pub struct ShowHelpEvent {

    /// The help content to be shown.
    pub content: String,

    /// The content help type. Must be one of 'html', 'markdown', or 'url'.
    pub kind: String,

    /// Focus the Help pane after the Help content has been rendered?
    pub focus: bool,

}

/// Update strings of future input and continuation prompts.
#[positron::event("prompt_state")]
pub struct PromptStateEvent {

    /// String for future input prompts.
    pub input_prompt: String,

    /// String for future continuation prompts.
    pub continuation_prompt: String,

}

/// Change the displayed working directory for the interpreter.
#[positron::event("working_directory")]
pub struct WorkingDirectoryEvent {

    /// The new working directory.
    pub directory: String,

}

#[derive(Debug, Clone)]
pub enum PositronEvent {
    Busy(BusyEvent),
    ShowMessage(ShowMessageEvent),
    ShowHelp(ShowHelpEvent),
    PromptState(PromptStateEvent),
    WorkingDirectory(WorkingDirectoryEvent),
}
